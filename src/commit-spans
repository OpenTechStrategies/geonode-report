#!/bin/bash

# See usage() function for details.

function usage ()
{
  echo "Usage: ./commit-spans PERIOD"
  echo ""
  echo "Invoke this while in a git repository.  It counts the number of"
  echo "commits in every (overlapping) SPAN-day period in a project."
}

PERIOD="${1}"

if [ "${PERIOD}X" = "X" ]; then
  usage
  exit 1
fi

function valid_date ()
{
   year="${1}"
   month="${2}"
   day="${3}"

   if [ ${year} = 2012 -o ${year} = "2016" ]; then
     if [ ${month}/${day} = "02/29" ]; then
       return 0
     fi
   fi

   case "${month}/${day}" in
        "02/29" | "02/30" | "02/31" | "04/31" | "06/31" | "09/31" | "11/31" )
          return 1 ;;
        *)
          return 0 ;;
   esac
}

for year in 2010 2011 2012 2013 2014 2015 2016; do
  for month in 01 02 03 04 05 06 07 08 09 10 11 12; do
    for day in 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31; do
      START_DATE="${year}/${month}/${day}"
      if valid_date ${year} ${month} ${day}; then
        echo -n "For ${PERIOD}-day period starting ${START_DATE}: "
        git log --date-order --since="${START_DATE}" --before="`date -d \"${START_DATE} + ${PERIOD} days\"`" \
          | grep -E "^commit " | wc -l
      fi
    done
  done
done
